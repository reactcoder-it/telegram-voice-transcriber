require('dotenv').config()
const TelegramBot = require('node-telegram-bot-api')
const axios = require('axios')
const ffmpeg = require('fluent-ffmpeg')
const fs = require('fs')
const path = require('path')
const OpenAI = require('openai')

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
})

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, {
  polling: true
})

function convertOgaToWav(inputPath, outputPath) {
  return new Promise((resolve, reject) => {
    ffmpeg(inputPath)
      .toFormat('wav')
      .on('end', () => resolve(outputPath))
      .on('error', reject)
      .save(outputPath)
  })
}

async function transcribeAudio(filePath) {
  const audioFile = fs.createReadStream(filePath)
  const transcription = await openai.audio.transcriptions.create({
    file: audioFile,
    model: 'whisper-1'
  })
  return transcription.text
}

bot.onText(/\/start/, msg => {
  const chatId = msg.chat.id
  const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}! üëã
–Ø –±–æ—Ç –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é OpenAI Whisper.
–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è —Ä–∞—Å—à–∏—Ñ—Ä—É—é –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç.

–ö–æ–º–∞–Ω–¥—ã:
- /help - –ø–æ–º–æ—â—å –ø–æ –±–æ—Ç—É
- /start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
`
  bot.sendMessage(chatId, welcomeMessage)
})

bot.on('voice', async (msg) => {
  const chatId = msg.chat.id
  const voice = msg.voice
  const fileId = voice.file_id
  const fileUrl = await bot.getFileLink(fileId)

  const inputPath = path.resolve(__dirname, "input.oga")
  const outputPath = path.resolve(__dirname, "output.wav")

  const response = await axios({ url: fileUrl, responseType: 'stream' })
  const writer = fs.createWriteStream(inputPath)
  response.data.pipe(writer)

  writer.on('finish', async () => {
    try {
      await convertOgaToWav(inputPath, outputPath)
      const transcript = await transcribeAudio(outputPath)

      await bot.sendMessage(chatId, `–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞: ${transcript}`)
      fs.unlink(inputPath, err => {
        if (err) console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${inputPath}:`, err)
      })
      fs.unlink(outputPath, err => {
        if (err) console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${outputPath}:`, err)
      })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: ', error)
      await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.')
    }
  })
})
